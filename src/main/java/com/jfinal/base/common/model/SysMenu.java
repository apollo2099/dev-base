package com.jfinal.base.common.model;

import java.util.List;
import java.util.Map;

import com.jfinal.base.common.model.base.BaseSysMenu;
import com.jfinal.base.utils.ObjectUtils;
import com.jfinal.plugin.activerecord.Page;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class SysMenu extends BaseSysMenu<SysMenu> {
	public static final SysMenu dao = new SysMenu();
	public Page<SysMenu> paginate(int pageNumber, int pageSize,Map<String,Object> param) {
		StringBuffer sqlWhere = new StringBuffer(" from sys_menu where status<>-1 ");
        if(ObjectUtils.isNotEmpty(param.get("menuName"))){
        	String menuName = (String) param.get("menuName");
	    	sqlWhere.append(" and menu_name like '%"+menuName+"%'");
	    }
        if(ObjectUtils.isNotEmpty(param.get("parentId"))){
        	String parentId = (String) param.get("parentId");
	    	sqlWhere.append(" and parent_id = "+parentId);
	    }
        sqlWhere.append(" order by menu_id desc ");
		return paginate(pageNumber, pageSize, "select *", sqlWhere.toString());
	}
	
	/**
	 * 根据角色id查询管理资源信息
	 * @param pageNumber
	 * @param pageSize
	 * @param param
	 * @return
	 */
	public Page<SysMenu> paginateRes(int pageNumber, int pageSize,Map<String,Object> param) {
		StringBuffer sqlWhere = new StringBuffer(" from sys_menu m, sys_role_resource rs where m.status<>-1  and m.menu_id = rs.resource_id");
        if(ObjectUtils.isNotEmpty(param.get("roleId"))){
        	Integer roleId = (Integer) param.get("roleId");
	    	sqlWhere.append(" and rs.role_id = "+roleId);
	    }
        sqlWhere.append(" order by m.menu_id desc ");
		return paginate(pageNumber, pageSize, "select m.*", sqlWhere.toString());
		
	}
	
	
	public List<SysMenu> findAll(){
		String sql ="select *  from sys_menu where status<>-1 and parent_id=0";
		return super.find(sql);
	}
	
	
	/**
	 * 更新用户状态
	 * @param userId 用户编码
	 * @param status 用户状态
	 * @return
	 */
	public Boolean updateStatus(Integer menuId,Integer status){
		Boolean isFlag = false;
		if (ObjectUtils.isNotEmpty(menuId)&& ObjectUtils.isNotEmpty(status)) {
			SysMenu sysUser = super.findById(menuId);
			sysUser.setStatus(status);
			sysUser.update();
		}
		return isFlag;
	}
}
